{
  "id": "4ff2f21d-1bba-4c44-bb96-e05728bcf6ed",
  "name": "classification_template(imputer=d3m.primitives.data_cleaning.imputer.SKlearn, classifier=d3m.primitives.regression.random_forest.SKlearn)",
  "description": "To be used with NYU datamart.",
  "schema": "https://metadata.datadrivendiscovery.org/schemas/v0/pipeline.json",
  "created": "2019-06-06T21:30:30Z",
  "context": "TESTING",
  "inputs": [
    {
      "name": "input dataset"
    }
  ],
  "outputs": [
    {
      "data": "steps.12.produce",
      "name": "predictions"
    }
  ],
  "steps": [
    {
      "type": "PRIMITIVE",
      "primitive": {
        "id": "fe0f1ac8-1d39-463a-b344-7bd498a31b91",
        "version": "0.1",
        "name": "Perform dataset augmentation using Datamart",
        "python_path": "d3m.primitives.data_augmentation.datamart_augmentation.Common"
      },
      "arguments": {
        "inputs": {
          "type": "CONTAINER",
          "data": "inputs.0"
        }
      },
      "outputs": [
        {
          "id": "produce"
        }
      ],
      "hyperparams": {
        "system_identifier": {
          "type": "VALUE",
          "data": "NYU"
        },
        "search_result": {
          "type": "VALUE",
          "data": "{\"augmentation\": {\"left_columns\": [[1]], \"left_columns_names\": [\"tpep_pickup_datetime\"], \"right_columns\": [[0]], \"type\": \"join\"}, \"id\": \"datamart.url.a3943fd7892d5d219012f889327c6661\", \"metadata\": {\"columns\": [{\"coverage\": [{\"range\": {\"gte\": 1451610000.0, \"lte\": 1540252800.0}}], \"mean\": 1495931400.0, \"name\": \"DATE\", \"semantic_types\": [\"http://schema.org/DateTime\"], \"stddev\": 25590011.431395352, \"structural_type\": \"http://schema.org/Text\"}, {\"name\": \"HOURLYSKYCONDITIONS\", \"semantic_types\": [], \"structural_type\": \"http://schema.org/Text\"}, {\"coverage\": [{\"range\": {\"gte\": -17.2, \"lte\": 37.8}}], \"mean\": 14.666224009096823, \"name\": \"HOURLYDRYBULBTEMPC\", \"semantic_types\": [], \"stddev\": 9.973788193915643, \"structural_type\": \"http://schema.org/Float\"}, {\"coverage\": [{\"range\": {\"gte\": 11.0, \"lte\": 100.0}}], \"mean\": 60.70849577647823, \"name\": \"HOURLYRelativeHumidity\", \"semantic_types\": [], \"stddev\": 18.42048051096981, \"structural_type\": \"http://schema.org/Float\"}, {\"coverage\": [{\"range\": {\"gte\": 0.0, \"lte\": 41.0}}], \"mean\": 10.68859649122807, \"name\": \"HOURLYWindSpeed\", \"semantic_types\": [], \"stddev\": 5.539675475162907, \"structural_type\": \"http://schema.org/Float\"}, {\"name\": \"HOURLYWindDirection\", \"semantic_types\": [], \"structural_type\": \"http://schema.org/Text\"}, {\"coverage\": [{\"range\": {\"gte\": 28.89, \"lte\": 30.81}}], \"mean\": 29.90760315139694, \"name\": \"HOURLYStationPressure\", \"semantic_types\": [\"https://metadata.datadrivendiscovery.org/types/PhoneNumber\"], \"stddev\": 0.24584097919742368, \"structural_type\": \"http://schema.org/Float\"}], \"date\": \"2019-01-22T01:54:58.281183Z\", \"description\": \"This data contains weather information for NY city around LaGuardia Airport from 2016 to 2018; weath...\", \"materialize\": {\"direct_url\": \"https://drive.google.com/uc?export=download&id=1jRwzZwEGMICE3n6-nwmVxMD2c0QCHad4\", \"identifier\": \"datamart.url\"}, \"name\": \"Newyork Weather Data around Airport 2016-18\", \"nb_rows\": 24624, \"size\": 1523693}, \"score\": 1.0, \"supplied_id\": \"DA_ny_taxi_demand_dataset_TRAIN\", \"supplied_resource_id\": \"learningData\"}"
        }
      }
    },
    {
      "type": "PRIMITIVE",
      "primitive": {
        "id": "f31f8c1f-d1c5-43e5-a4b2-2ae4a761ef2e",
        "version": "0.2.0",
        "name": "Denormalize datasets",
        "python_path": "d3m.primitives.data_transformation.denormalize.Common"
      },
      "arguments": {
        "inputs": {
          "type": "CONTAINER",
          "data": "steps.0.produce"
        }
      },
      "outputs": [
        {
          "id": "produce"
        }
      ]
    },
    {
      "type": "PRIMITIVE",
      "primitive": {
        "id": "4b42ce1e-9b98-4a25-b68e-fad13311eb65",
        "version": "0.3.0",
        "name": "Extract a DataFrame from a Dataset",
        "python_path": "d3m.primitives.data_transformation.dataset_to_dataframe.Common"
      },
      "arguments": {
        "inputs": {
          "type": "CONTAINER",
          "data": "steps.1.produce"
        }
      },
      "outputs": [
        {
          "id": "produce"
        }
      ]
    },
    {
      "type": "PRIMITIVE",
      "primitive": {
        "id": "d510cb7a-1782-4f51-b44c-58f0236e47c7",
        "version": "0.6.0",
        "name": "Parses strings into their types",
        "python_path": "d3m.primitives.data_transformation.column_parser.Common"
      },
      "arguments": {
        "inputs": {
          "type": "CONTAINER",
          "data": "steps.2.produce"
        }
      },
      "outputs": [
        {
          "id": "produce"
        }
      ]
    },
    {
      "type": "PRIMITIVE",
      "primitive": {
        "id": "4503a4c6-42f7-45a1-a1d4-ed69699cf5e1",
        "version": "0.3.0",
        "name": "Extracts columns by semantic type",
        "python_path": "d3m.primitives.data_transformation.extract_columns_by_semantic_types.Common"
      },
      "arguments": {
        "inputs": {
          "type": "CONTAINER",
          "data": "steps.3.produce"
        }
      },
      "outputs": [
        {
          "id": "produce"
        }
      ],
      "hyperparams": {
        "semantic_types": {
          "type": "VALUE",
          "data": [
            "https://metadata.datadrivendiscovery.org/types/Attribute"
          ]
        }
      }
    },
    {
      "type": "PRIMITIVE",
      "primitive": {
        "name": "sklearn.impute.SimpleImputer",
        "python_path": "d3m.primitives.data_cleaning.imputer.SKlearn",
        "version": "2019.11.13",
        "id": "d016df89-de62-3c53-87ed-c06bb6a23cde"
      },
      "arguments": {
        "inputs": {
          "type": "CONTAINER",
          "data": "steps.4.produce"
        }
      },
      "outputs": [
        {
          "id": "produce"
        }
      ],
      "hyperparams": {
        "strategy": {
          "type": "VALUE",
          "data": "most_frequent"
        }
      }
    },
    {
      "type": "PRIMITIVE",
      "primitive": {
        "name": "sklearn.preprocessing.data.OneHotEncoder",
        "python_path": "d3m.primitives.data_transformation.one_hot_encoder.SKlearn",
        "version": "2019.11.13",
        "id": "c977e879-1bf5-3829-b5b0-39b00233aff5"
      },
      "arguments": {
        "inputs": {
          "type": "CONTAINER",
          "data": "steps.5.produce"
        }
      },
      "outputs": [
        {
          "id": "produce"
        }
      ],
      "hyperparams": {
        "handle_unknown": {
          "type": "VALUE",
          "data": "ignore"
        }
      }
    },
    {
      "type": "PRIMITIVE",
      "primitive": {
        "id": "eb5fe752-f22a-4090-948b-aafcef203bf5",
        "version": "0.2.0",
        "name": "Casts DataFrame",
        "python_path": "d3m.primitives.data_transformation.cast_to_type.Common"
      },
      "arguments": {
        "inputs": {
          "type": "CONTAINER",
          "data": "steps.6.produce"
        }
      },
      "outputs": [
        {
          "id": "produce"
        }
      ],
      "hyperparams": {
        "type_to_cast": {
          "type": "VALUE",
          "data": "float"
        }
      }
    },
    {
      "type": "PRIMITIVE",
      "primitive": {
        "id": "4503a4c6-42f7-45a1-a1d4-ed69699cf5e1",
        "version": "0.3.0",
        "name": "Extracts columns by semantic type",
        "python_path": "d3m.primitives.data_transformation.extract_columns_by_semantic_types.Common"
      },
      "arguments": {
        "inputs": {
          "type": "CONTAINER",
          "data": "steps.3.produce"
        }
      },
      "outputs": [
        {
          "id": "produce"
        }
      ],
      "hyperparams": {
        "semantic_types": {
          "type": "VALUE",
          "data": [
            "https://metadata.datadrivendiscovery.org/types/TrueTarget"
          ]
        }
      }
    },
    {
      "type": "PRIMITIVE",
      "primitive": {
        "id": "eb5fe752-f22a-4090-948b-aafcef203bf5",
        "version": "0.2.0",
        "name": "Casts DataFrame",
        "python_path": "d3m.primitives.data_transformation.cast_to_type.Common"
      },
      "arguments": {
        "inputs": {
          "type": "CONTAINER",
          "data": "steps.8.produce"
        }
      },
      "outputs": [
        {
          "id": "produce"
        }
      ]
    },
    {
      "type": "PRIMITIVE",
      "primitive": {
        "name": "sklearn.ensemble.forest.RandomForestRegressor",
        "python_path": "d3m.primitives.regression.random_forest.SKlearn",
        "version": "2019.11.13",
        "id": "f0fd7a62-09b5-3abc-93bb-f5f999f7cc80"
      },
      "arguments": {
        "inputs": {
          "type": "CONTAINER",
          "data": "steps.7.produce"
        },
        "outputs": {
          "type": "CONTAINER",
          "data": "steps.9.produce"
        }
      },
      "outputs": [
        {
          "id": "produce"
        }
      ]
    },
    {
      "type": "PRIMITIVE",
      "primitive": {
        "id": "4503a4c6-42f7-45a1-a1d4-ed69699cf5e1",
        "version": "0.3.0",
        "name": "Extracts columns by semantic type",
        "python_path": "d3m.primitives.data_transformation.extract_columns_by_semantic_types.Common"
      },
      "arguments": {
        "inputs": {
          "type": "CONTAINER",
          "data": "steps.3.produce"
        }
      },
      "outputs": [
        {
          "id": "produce"
        }
      ],
      "hyperparams": {
        "semantic_types": {
          "type": "VALUE",
          "data": [
            "https://metadata.datadrivendiscovery.org/types/Target",
            "https://metadata.datadrivendiscovery.org/types/PrimaryKey"
          ]
        }
      }
    },
    {
      "type": "PRIMITIVE",
      "primitive": {
        "id": "8d38b340-f83f-4877-baaa-162f8e551736",
        "version": "0.3.0",
        "name": "Construct pipeline predictions output",
        "python_path": "d3m.primitives.data_transformation.construct_predictions.Common"
      },
      "arguments": {
        "inputs": {
          "type": "CONTAINER",
          "data": "steps.10.produce"
        },
        "reference": {
          "type": "CONTAINER",
          "data": "steps.11.produce"
        }
      },
      "outputs": [
        {
          "id": "produce"
        }
      ]
    }
  ]
}
